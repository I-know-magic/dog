//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.07 at 11:46:33 AM CET 
//


package it.polito.elite.dog.addons.rules.schemalibrary;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the it.polito.elite.dog.addons.rules.schemalibrary package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Rules_QNAME = new QName("http://elite.polito.it/domotics/dog/rules/rule_definition", "rules");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: it.polito.elite.dog.addons.rules.schemalibrary
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link CBlock }
     * 
     */
    public CBlock createCBlock() {
        return new CBlock();
    }

    /**
     * Create an instance of {@link Instant }
     * 
     */
    public Instant createInstant() {
        return new Instant();
    }

    /**
     * Create an instance of {@link RecurringInterval }
     * 
     */
    public RecurringInterval createRecurringInterval() {
        return new RecurringInterval();
    }

    /**
     * Create an instance of {@link Rule }
     * 
     */
    public Rule createRule() {
        return new Rule();
    }

    /**
     * Create an instance of {@link EBlock }
     * 
     */
    public EBlock createEBlock() {
        return new EBlock();
    }

    /**
     * Create an instance of {@link NotificationType }
     * 
     */
    public NotificationType createNotificationType() {
        return new NotificationType();
    }

    /**
     * Create an instance of {@link Day }
     * 
     */
    public Day createDay() {
        return new Day();
    }

    /**
     * Create an instance of {@link Notification }
     * 
     */
    public Notification createNotification() {
        return new Notification();
    }

    /**
     * Create an instance of {@link RuleList }
     * 
     */
    public RuleList createRuleList() {
        return new RuleList();
    }

    /**
     * Create an instance of {@link ABlock }
     * 
     */
    public ABlock createABlock() {
        return new ABlock();
    }

    /**
     * Create an instance of {@link Rhs }
     * 
     */
    public Rhs createRhs() {
        return new Rhs();
    }

    /**
     * Create an instance of {@link Interval }
     * 
     */
    public Interval createInterval() {
        return new Interval();
    }

    /**
     * Create an instance of {@link Lhs }
     * 
     */
    public Lhs createLhs() {
        return new Lhs();
    }

    /**
     * Create an instance of {@link StateType }
     * 
     */
    public StateType createStateType() {
        return new StateType();
    }

    /**
     * Create an instance of {@link State }
     * 
     */
    public State createState() {
        return new State();
    }

    /**
     * Create an instance of {@link RecurringInstant }
     * 
     */
    public RecurringInstant createRecurringInstant() {
        return new RecurringInstant();
    }

    /**
     * Create an instance of {@link Command }
     * 
     */
    public Command createCommand() {
        return new Command();
    }

    /**
     * Create an instance of {@link Param }
     * 
     */
    public Param createParam() {
        return new Param();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RuleList }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://elite.polito.it/domotics/dog/rules/rule_definition", name = "rules")
    public JAXBElement<RuleList> createRules(RuleList value) {
        return new JAXBElement<RuleList>(_Rules_QNAME, RuleList.class, null, value);
    }

}
